---
import Container from '@/components/Container.astro';
import Database from '@/components/svg/Database.astro';
import BaseLayout from '@/layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

const articles = (await getCollection('articles')).sort((a, b) => b.data.publishedAt.getTime() - a.data.publishedAt.getTime());
---
<BaseLayout>
  <section class="bg-[#F7F9FC] border-b border-indigo-100 overflow-hidden">
    <Container class="py-14 pb-36 relative">
      <div class="flex flex-col gap-3 md:mr-44">
        <h1 class="text-3xl md:text-5xl font-bold text-balance">
          Todo lo que necesitas saber sobre bases de datos
        </h1>
        <p class="font-medium md:text-lg">
          Descubre lo mejor de las bases de datos con esta recopilación de información, guías y recursos para aprender SQL.
        </p>
      </div>
      <Database
        class="absolute right-0 bottom-0 w-72 h-72 md:w-[22rem] md:h-[22rem] -mb-20 opacity-5 md:opacity-10 text-indigo-800"
      />
    </Container>
  </section>
  <section class="-mt-36">
    <Container class="py-12">
      <div class="flex flex-col gap-5">
        <h2 class="font-semibold text-2xl text-indigo-700">Últimas publicaciones</h2>
        <div class="grid grid-cols-3 gap-3">
          {articles.map((article) => (
            <div class="bg-white border border-indigo-100 rounded-xl p-4">
              <h3 class="font-bold text-lg leading-tight">{article.data.title}</h3>
              <time
                class="text-neutral-600 text-sm"
                datetime={article.data.publishedAt.toISOString()}
              >
                {article.data.publishedAt.getFullYear()}-{(article.data.publishedAt.getMonth()+1).toString().padStart(2, '0')}-{(article.data.publishedAt.getDate()).toString().padStart(2, '0')}
              </time>
            </div>
          ))}
        </div>
      </div>
    </Container>
  </section>
</BaseLayout>
